@using Giti.Code
@using Giti.Models
@using LibGit2Sharp
@model TreeModel
@{

    string currRepo = (string)ViewContext.RouteData.Values["repoName"];
    string currUser = (string)ViewContext.RouteData.Values["userName"];
    string currId = (string)ViewContext.RouteData.Values["id"];
    var request = ViewContext.HttpContext.Request;
    var giturl = $"{request.Scheme}://{request.Host}/{currUser}/{currRepo}.git";
    ViewBag.Title = currRepo;
}
<h3>@currUser / @currRepo</h3>
<div class="row">
    <div class="col-md-8">
         <h3>@Localizer["Clone current repository with url below"] <small><a href="http://git-scm.com/book/en/Git-Basics-Getting-a-Git-Repository" rel="nofollow">@Localizer["Find out how"]</a></small></h3>
         <input type="text" class="form-control" value="@giturl" readonly="readonly">
    </div>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th colspan="3">Git Repository </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Parent != null)
        {
            <tr>
                <td class="collapsing"><i class="folder icon"></i><a href="@Url.UnencodedRouteLink("GetTreeView", new { repoName = currRepo, id = currId, path = Model.Parent })">..</a></td>
                <td></td>
                <td class=""></td>
            </tr>}
        @foreach (FileViewModel fvm in Model.Children)
        {
            bool isTree = fvm.Type == ObjectType.Tree;

            <tr>
                <td class="collapsing"><i class="@((isTree) ? "folder" : "file outline") icon"></i><a href="@Url.UnencodedRouteLink((isTree) ? "GetTreeView" : "GetBlobView", new { repoName = currRepo, id = currId, path = fvm.Path })">@fvm.Name</a></td>
                <td></td>
                <td class=""></td>
            </tr>}
    </tbody>
</table>